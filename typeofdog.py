# -*- coding: utf-8 -*-
"""TypeofDog.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18gXciEy2zHmeTfN0oVvgjRRjEWvZ6brU
"""

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive

!unzip -qq "/content/drive/MyDrive/train_data.zip"

# Commented out IPython magic to ensure Python compatibility.
# %cd /content
!git clone https://github.com/ultralytics/yolov5.git

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/yolov5/
!pip install -r requirements.txt

# Commented out IPython magic to ensure Python compatibility.
# %cat /content/dataset/data.yaml

# Commented out IPython magic to ensure Python compatibility.
# %cd /
from glob import glob
img_list = glob('/content/dataset/train_data/images/train/*.jpg')
print(len(img_list))

# Commented out IPython magic to ensure Python compatibility.
# %cd /
from glob import glob
val_list = glob('/content/dataset/train_data/images/val/*.jpg')
print(len(val_list))

from sklearn.model_selection import train_test_split
train_img_list=img_list
val_img_list=val_list
print(len(train_img_list), len(val_img_list))

with open('/content/dataset/train.txt', 'w') as f:
  f.write('\n'.join(train_img_list))

with open('/content/dataset/val.txt', 'w') as f:
  f.write('\n'.join(val_img_list))

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/yolov5/

!python train.py --img 640 --batch 16 --epochs 300 --data /content/dataset/data.yaml --cfg ./models/yolov5s.yaml --weights yolov5s.pt --name results

# Commented out IPython magic to ensure Python compatibility.
# %load_ext tensorboard
# %tensorboard --logdir /content/yolov5/runs/

from IPython.display import Image
import os

val_img_path = val_img_list[2]

!python detect.py --weights /content/yolov5/runs/train/results/weights/best.pt --img 640 --conf 0.5 --source "{val_img_path}"

!pip install selenium
!python -m pip install opencv-python

!conda create -n yolov5 python=3.8
!conda activate yolov5

!files = glob.glob('/content/dataset/train_data/images/train/*.jpg')

for f in files:
    title, ext = os.path.splitext(f)
    if ext in ['.jpg']:
        img = Image.open(f)
        img_resize = img.resize((416, 416))
        img_resize.save(title+ext)